
paths:
  /api/feedback:
    get:
      summary: Retrieves feedbacks with pagination
      tags:
        - Feedback
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: Number of feedbacks per page
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedbacks:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedbackSchema'
                  currentPage:
                    type: integer
                  totalPages:
                    type: integer
                  totalFeedbacks:
                    type: integer
        '500':
          description: Internal Server Error
        '404':
          description: No record found
        '401':
          description: User unauthorized
      security:
        - JWTAuth: []
    post:
      summary: Create a new feedback
      tags:
        - Feedback
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackSchema"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackSchema"
        '400':
          description: Invalid request body
        '500':
          description: Internal Server Error
  /api/feedback/product/{product_id}:
    get:
      summary: Get feedbacks based on product ID
      tags:
        - Feedback
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: string
          description: ID of the product to retrieve feedbacks for
        - in: query
          name: range
          schema:
            type: string
          description: Number of months to consider for feedbacks
      responses:
        '200':
          description: Successful response with feedbacks
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_id:
                    type: string
                  AvgRating:
                    type: number
                  feedbacks:
                    type: array
                    items:
                      type: object
                      properties:
                        feedback_id:
                          type: string
                        comment:
                          type: string
                        rating:
                          type: number
        '400':
          description: Invalid range or bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: No feedbacks found for the product
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/feedback/getFeedbacksByDate:
    get:
      summary: Get feedbacks within a specified date range
      tags:
        - Feedback
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date-time
            description: Start date for the feedbacks (in ISO 8601 format)
          required: true
        - in: query
          name: end
          schema:
            type: string
            format: date-time
            description: End date for the feedbacks (in ISO 8601 format)
          required: true
      responses:
        '200':
          description: Successful response with feedbacks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackSchema'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/feedback/{id}:
    get:
      summary: Get feedback by ID
      tags:
        - Feedback
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Feedback ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackSchema'
        '404':
          description: Feedback not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update a feedback
      tags:
        - Feedback
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the feedback template to update
          schema:
            type: string
      requestBody:
        description: Feedback to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackSchema"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackSchema"
        500:
          description: Internal Server Error
        404:
          description: No record found
    delete:
        summary: Delete a feedback  by ID
        tags:
          - Feedback 
        security:
          - JWTAuth: []
        parameters:
          - in: path
            name: id
            required: true
            description: ID of the feedback  to delete
            schema:
              type: string
        responses:
          '200':
            description: Feedback  successfully deleted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FeedbackSchema'
          500:
            description: Internal Server Error
          404:
            description: No record found
components:
  schemas:
    FeedbackSchema:
      type: object
      properties:
        user_id:
          type: string
          description: ID of the user who gave the feedback.
          example: 612f45d5fa301d5f77e5d5af
        deliveryagent_id:
          type: string
          description: ID of the delivery agent for whom the feedback is given.
          example: 613f54d5fa301d5f77e5d5af
        client_id:
          type: string
          description: ID of the client for whom the feedback is given.
          example: 611f44d5fa301d5f77e5d5af
        product_id:
          type: string
          description: ID of the product for which the feedback is given.
          example: 614f45d5fa301d5f77e5d5af
        template_id:
          type: string
          description: ID of the feedback template used for the feedback.
          example: 615f45d5fa301d5f77e5d5af
        rating:
          type: number
          description: Numeric rating given in the feedback.
          example: 4
        comment:
          type: string
          description: Optional comment given in the feedback.
          example: "The delivery was fast and efficient."
        feedback_type:
          type: number
          description: Type of feedback given.
          example: 1
        feedback_language:
          type: number
          description: Language in which the feedback is given.
          example: 1
        additional_fields:
          type: object
          description: Additional fields given in the feedback.
          example:
            field1: "value1"
            field2: "value2"
        qas:
          type: object
          description: Questions and answers given in the feedback.
          example:
            Q1: "A1"
            Q2: "A2"
      required:
        - user_id
        - rating
      example:
        feedback_id: 612f45d5fa301d5f77e5d5af
        product_id: 614f45d5fa301d5f77e5d5af
        user_id: 615f45d5fa301d5f77e5d5af
        rating: 4
        comment: "The delivery was fast and efficient."
        review:
          field1: "value1"
          field2: "value2"
        qas:
          Q1: "Answer to the question 1 "
          Q2: "Answer to the question 2 "
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT